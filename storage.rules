rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // User profile pictures
    match /profile-pics/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Message attachments
    match /attachments/{userId}/{fileName} {
      allow read: if request.auth != null &&
                   hasAccessToAttachment(userId);
      allow write: if request.auth != null && 
                   request.auth.uid == userId &&
                   request.resource.size < 5 * 1024 * 1024; // 5MB limit
    }

    function hasAccessToAttachment(senderId) {
      // Check if user is in a conversation with the sender
      return exists(/databases/$(database)/documents/messages.where(
        'participants', 'array-contains', request.auth.uid
      ).where(
        'participants', 'array-contains', senderId
      ).limit(1));
    }

    // Deny all other access by default
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}